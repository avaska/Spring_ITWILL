springboard.txt

* pom.xml에서 파일을 못 가져올때
  C:\Users\ITWILL\.m2\repository 폴더에서 파일 모두 삭제후 재시작
  (STS 종료된후에 실행)
  



게시판 (CRUD)

등록 (Create)
조회 (Read)
수정 (Update)
삭제 (Delete)


* 일반적인 개발순서
  DB -> 컨트롤러 -> 비지니스 영역 -> 화면
  
  * 개발 준비 
  데이터베이스 영역 
    - 디비생성, 계정 생성
    - 테이블 설계 생성(ERD)
    - (선택) 더미데이터 추가
  스프링 MVC 영역
    - 패키지 구조를 결정
    - 개별 역활 분담(팀플)
    - 테스트 방법 수립(선택사항- 권장)
  화면 영역
    - 화면방식 결정(JSP/Html-Js)
    - 경로 설정(절대경로, 상대경로)
    

* 계층    
    - controller
	- domain : DTO
	- persistence : DAO
	- service : Action  => 컨트롤러 - DAO 연결 , 컨트롤러에 기능이 집중되는 것을 분산시키려는 목적

* 계층의 연결
	- servlet-context.xml : controller 연결
	- root-context.xml : service, persistence 연결
	
	- root-context.xml, servlet-context.xml은 연결되어 있다
	=> controller, service, persistence 계층이 모두 연결됨
         
         
---------------------------------------------------------

CREATE TABLE `springdb`.`tbl_board` (
  `bno` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(500) NOT NULL,
  `content` TEXT NULL,
  `writer` VARCHAR(45) NOT NULL,
  `regdate` TIMESTAMP NOT NULL DEFAULT now(),
  `viewcnt` INT NULL DEFAULT 0,
  PRIMARY KEY (`bno`));
         
  
  * 화면(JSP 페이지)에서 외부 파일 추가
   => 외부 파일 경로 미인식(패스 오류)
  
  1) EL 표현식 사용 프로젝트 경로 지정
  변경전 : /resources/bootstrap/~~
   
  변경후 : ${pageContext.request.contextPath}/resources/bootstrap/~~

  2) JSTL (core 라이브러리 사용) ( servlet 2.4 이하 )
  
  <c:out value='${pageContext.request.contextPath}/resources/bootstrap/~~'/>
  
  
-----------------------------------------------------------------------------------
  
  * 컨트롤러 (+프리젠테이션 계층)
  
  - 같은 동작의 경우 하나의 주소만 사용해서 구분(페이지 전달방식get/post)
   **Form.jsp -> ** Pro.jsp (model1)
   **.me -> **Action.me (model2 - MVC)
   **/register -> **/register (Spring MVC)
   
  - 공통적인 URI, 기능별 URI 결정 => 설계단계
  - 주소별  URI 호출방식 결정
  - 결과페이지 처리방식, 리다이렉트 이동방식 처리 
  - 예외처리  
  
  - URI 결정시 사용되는 규칙
  1) 외부입력, 정보를 전달, 입력을 하는 페이지의 경우 GET방식처리 (필수)
  2) 페이지 조회가 필요한경우 GET방식 처리 
  3) 데이터를 처리하는 페이지 POST방식 처리 (외부 입력X)
  4) 내부처리 로직, DAO 처리필요한경우 POST 방식처리 
  
      방식 / URI / 설명
   GET / /board/register / 회원가입 페이지 보여주기
   POST / /board/register / 회원가입  처리하기 
      ....
      
    Ajax => REST API    
  
------------------------------------------------------------

  * 예외처리 
  SpringMVC 구조  => 컨트롤러가 많은 호출을 시도하기 때문에 주로 예외처리 해야함
  
  - @ExceptionHandler (메서드)
  - @ControllerAdvice => 가장 일반적이면서 많이사용되는 형태 (클래스)
  - @ResponseStatus ( http 페이지 상태 )
  
--------------------------------------------------------

  * 페이징 처리 
  - 페이징처리는 반드시 GET방식 (주로 데이터 URL을 사용한 이동)
  - 정보 조회 페이지 에서는 반드시 리스트로 이동하는 동작이 필요함
  - 특정글의 페이지 번호를 지정해서 가지고 다녀야한다.(글을 읽는 시점의 페이지와
    읽고 나서의 페이지가 동일해야함)
  - 화면 아래쪽에 페이지 블럭을 사용한 페이징 처리   
  
  * 하단 페이징 처리
   - 끝 페이지 번호(endPage)
    => 현재 페이지번호 / 페이지 크기 * 페이지크기
    ex) 현재 3page , 10개씩 => 3/10 *10
        1page, 10개 => 10번
        9page, 10개 => 10번
        12page, 10개 => 20번
   
   - 시작 페이지번호(startPage)
   => (끝 페이지 번호 - 현재 페이지 번호) + 1
      
   - 전체 글의 수 (totalCount)
   => DB에서 전달된 정보를 사용
   
   - 이전 링크 (prev)
   - 다음 링크 (next)
   => 제어문 사용
   
  

--------------------------------------------------------

AdminLTE 템플릿으로 실습할 것
https://adminlte.io/themes/AdminLTE/index2.html
 -> documentation
 -> github 소스코드 다운로드
 
 -> 수업용으로 정리된 파일 사용할 경우
 -> /src/main/webapp/resources에 bootstrap, dist, plugins 폴더 복사
 -> /src/main/webapp/WEB-INF/views에 include 폴더 복사

 header,footer.jsp에서 리소스 경로 찾지 못 하므로 
 src="경로"에 ${pageContext.request.contextPath } 추가
 
 home.jsp에 header,footer 파일 읽어들이도록 코드 추가
 <%@ include file="include/header.jsp" %>,
 <%@ include file="include/footer.jsp" %>
 
 
 HomeController.java 파일 실행(테스트) 
  -> HomeController에서 서버 실행해야 함(ctrl+f11)
  -> http://localhost:8090/controller/ (기존)
  -> http://localhost:8090/             (프로젝트 경로 수정함)
  
  
--------------------------------------------------------------------------
  
  서버 실행 시 톰캣 오류 
  : 프로젝트 properties - deployment assembly에서 maven dependencies가 누락되어서 발생한 오류
    -> 추가하면 됨
    -> git pull했을 때 날라간 듯

https://jaeu0608.tistory.com/155












